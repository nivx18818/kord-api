meta {
  name: update
  type: http
  seq: 3
}

patch {
  url: {{base_url}}/users/{{userId}}
  body: json
  auth: none
}

body:json {
  {
    "name": "Updated John Doe",
    "username": "johndoe",
    "email": "updated@example.com",
    "password": "securepass123",
    "dateOfBirth": "1990-01-01"
  }
}

tests {
  test("Status should be 200 for successful update", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response should include updated user details", function() {
    expect(res.getBody()).to.have.property('id');
    expect(res.getBody()).to.have.property('username');
    expect(res.getBody()).to.have.property('email');
    expect(res.getBody()).to.have.property('name');
  });
  
  test("Updated user should reflect changes", function() {
    expect(res.getBody().id).to.equal(bru.getVar("userId"));
    expect(res.getBody().name).to.equal('Updated John Doe');
    expect(res.getBody().email).to.equal('updated@example.com');
  });
  
  test("Handle not found error for invalid ID", function() {
    if (res.getStatus() === 404) {
      expect(res.getBody().message).to.contain('not found');
    }
  });
}
