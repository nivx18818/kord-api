meta {
  name: register-invalid-username
  type: http
  seq: 7
}

post {
  url: {{base_url}}/auth/register
  body: json
  auth: none
}

body:json {
  {
    "username": "test@user",
    "email": "test_{{timestamp}}@example.com",
    "password": "Password123!",
    "dateOfBirth": "1990-01-01"
  }
}

script:pre-request {
  bru.setVar("timestamp", Date.now());
}

tests {
  test("Status should be 400 for invalid username with @ symbol", function () {
    expect(res.getStatus()).to.equal(400);
  });

  test("Response should indicate username validation error", function () {
    const body = res.getBody();
    expect(body.code).to.equal(40001);
    expect(body.message).to.equal("Validation failed");
    expect(body.errors).to.have.property("username");
    expect(body.errors.username).to.be.an("array");
  });
}
