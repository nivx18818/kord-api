meta {
  name: register
  type: http
  seq: 2
}

post {
  url: {{base_url}}/auth/register
  body: json
  auth: none
}

body:json {
  {
    "username": "testuser_{{timestamp}}",
    "email": "test_{{timestamp}}@example.com",
    "password": "Password123!",
    "dateOfBirth": "1990-01-01"
  }
}

script:pre-request {
  bru.setVar("timestamp", Date.now());
}

script:post-response {
  if (res.getStatus() === 201) {
    bru.setEnvVar("accessToken", res.getBody().accessToken);
    bru.setEnvVar("refreshToken", res.getBody().refreshToken);
    bru.setEnvVar("testUsername", req.getBody().username);
    bru.setEnvVar("testEmail", req.getBody().email);
    bru.setEnvVar("testPassword", req.getBody().password);
  }
}

tests {
  test("Status should be 201 for successful registration", function () {
    expect(res.getStatus()).to.equal(201);
  });

  test("Response should include accessToken", function () {
    expect(res.getBody()).to.have.property("accessToken");
    expect(res.getBody().accessToken).to.be.a("string");
  });

  test("Response should include refreshToken", function () {
    expect(res.getBody()).to.have.property("refreshToken");
    expect(res.getBody().refreshToken).to.be.a("string");
  });
}
